{"remainingRequest":"/Users/haojianie/Desktop/Web/rppg-master/node_modules/babel-loader/lib/index.js!/Users/haojianie/Desktop/Web/rppg-master/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/haojianie/Desktop/Web/rppg-master/src/components/sketch.js","dependencies":[{"path":"/Users/haojianie/Desktop/Web/rppg-master/src/components/sketch.js","mtime":1597616775219},{"path":"/Users/haojianie/Desktop/Web/rppg-master/node_modules/cache-loader/dist/cjs.js","mtime":1597616075057},{"path":"/Users/haojianie/Desktop/Web/rppg-master/node_modules/babel-loader/lib/index.js","mtime":1597616074968},{"path":"/Users/haojianie/Desktop/Web/rppg-master/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1597616074257}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/haojianie/Desktop/Web/rppg-master/src/components/sketch.js"],"names":["vis","tf","run","video","document","getElementById","path","orig_v","Xsub","dXsub","prevFrame","diffBatch","Batch","delay","batch_size","batch_counter","dim","prediction","model","loadModel","loadLayersModel","console","log","processModel","result","predict","names","groups","DataSet","container","dataset","now","moment","options","drawPoints","dataAxis","visible","left","title","text","legend","start","add","end","graph2d","Graph2d","id","content","interpolation","parametrization","startVideo","loop","preprocess","setTimeout","browser","fromPixels","image","resizeBilinear","asType","div","scalar","expandDims","sub","moments","variance","sqrt","mean","print","cast","concat","transpose","addDataPoint","navigator","mediaDevices","getUserMedia","then","stream","srcObject","addEventListener","play","x","y","group","moveWindow","strategy","range","getWindow","interval","setWindow"],"mappings":"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","sourcesContent":["import * as vis from 'vis-timeline/standalone';\r\nimport * as tf from '@tensorflow/tfjs';\n//import * as tfn from '@tensorflow/tfjs-node';\r\n\r\nexport default function run() {\r\n\r\n\tlet video = document.getElementById('video');\n\tvar path = \"./model.json\";\r\n\tvar orig_v, Xsub, dXsub, prevFrame;\r\n\tvar diffBatch, Batch;\r\n\tvar delay = 30;\r\n\tvar batch_size = 20;\r\n\tvar batch_counter = 0;\r\n\tvar dim = 36;\r\n\tvar prediction;\r\n\tlet model;\r\n\n\tloadModel();\n\tasync function loadModel() {\n\t\tmodel = await tf.loadLayersModel(path);\n\t\t/* eslint-disable no-console */\n\t\tconsole.log(\"Successfully loaded ml model\");\n\t}\n\t\r\n\tasync function processModel() {\n\t\tmodel = await tf.loadLayersModel(path);\r\n\t\tvar result = model.predict(diffBatch, Batch);\r\n\t\tprediction = result;\r\n\t}\r\n\r\n\tvar names = [\"uniform\"];\r\n\tvar groups = new vis.DataSet();\r\n\tvar container = document.getElementById(\"visualization\");\r\n\tvar dataset = new vis.DataSet();\r\n\tvar now = vis.moment();\r\n\r\n\tvar options = {\r\n\t\tdrawPoints: false,\r\n\t\tdataAxis: {\r\n\t\t\tvisible: true,\r\n\t\t\tleft: {\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: \"Normalized Amplitude\",\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tlegend: false,\r\n\t\tstart: vis.moment().add(-5, \"seconds\"), // display start,  end\r\n\t\tend: vis.moment().add(10, \"seconds\"),\r\n\r\n\t};\r\n\r\n\t// eslint-disable-next-line\r\n\tvar graph2d = new vis.Graph2d(container, dataset, groups, options);\r\n\r\n\t// could delete the group , just use dataset\r\n\tgroups.add({\r\n\t\tid: 0,\r\n\t\tcontent: names[0],\r\n\t\toptions: {\r\n\t\t\tdrawPoints: false,\r\n\t\t\tinterpolation: {\r\n\t\t\t\tparametrization: \"uniform\",\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\r\n\r\n\tstartVideo();\r\n\t//initialize_chart();\r\n\r\n\tfunction loop() {\r\n\t\tpreprocess();\r\n\t\tsetTimeout(loop, delay);\r\n\t}\r\n\r\n\tfunction preprocess() {\r\n\t\torig_v = tf.browser.fromPixels(video);\r\n\r\n\t\tXsub = tf.image.resizeBilinear(orig_v, [dim, dim]);\r\n\r\n\t\tXsub = Xsub.asType('float32').div(tf.scalar(255));\r\n\t\tXsub = Xsub.expandDims(0); // (1, 36, 36, 3)\r\n\r\n\r\n\r\n\t\tif (prevFrame == null) {\r\n\t\t\tprevFrame = Xsub;\r\n\t\t\t/* eslint-disable no-console */\r\n\t\t\tconsole.log(\"initialize\")\n\t\t\t\r\n\t\t} else {\r\n\t\t\t//--------------------------------------\r\n\t\t\t// didn't get  only the 300, 300 , ie didn't crop\t\t\r\n\r\n\t\t\t// FRAME DIFF:\r\n\t\t\tdXsub = tf.div(tf.sub(Xsub, prevFrame), tf.add(Xsub, prevFrame));\r\n\r\n\t\t\t// SUBTRACT MEAN OF IMG:\r\n\t\t\tdXsub = tf.div(dXsub, tf.moments(dXsub).variance.sqrt()); // (1, 36, 36, 3)\r\n\t\t\tXsub = tf.sub(Xsub, tf.mean(Xsub));\r\n\t\t\tXsub = tf.div(Xsub, tf.moments(Xsub).variance.sqrt()); // (1, 36, 36, 3)\r\n\t\t\t/* eslint-disable no-console */\r\n\t\t\tconsole.log(\"below is X before mean\")\r\n\t\t\tconsole.log(Xsub.print(true));\r\n\r\n\t\t\tprevFrame = Xsub;\r\n\t\t\tif (batch_counter == 0) {\r\n\t\t\t\tBatch = tf.cast(Xsub, 'float32');\r\n\t\t\t\tdiffBatch = dXsub;\r\n\t\t\t} else {\r\n\t\t\t\tBatch.print(true);\r\n\t\t\t\tdiffBatch.print(true);\n\t\t\t\t\r\n\t\t\t\tBatch = tf.concat([Batch, Xsub]) // note the xsub here is after \r\n\t\t\t\tdiffBatch = tf.concat([diffBatch, dXsub]);\r\n\r\n\t\t\t}\r\n\t\t\tbatch_counter++;\r\n\t\t}\r\n\r\n\t\tif (batch_counter == batch_size) {\r\n\r\n\t\t\t// call update the chart\r\n\t\t\tBatch = tf.transpose(Batch, [2, 1, 3, 0]); // swap axis\r\n\t\t\tBatch = tf.expandDims(Batch, 0); // expand dimension\r\n\r\n\t\t\tdiffBatch = tf.transpose(diffBatch, [2, 1, 3, 0]); // swap axis\r\n\t\t\tdiffBatch = tf.expandDims(diffBatch, 0); // expand dimension\r\n\r\n\t\t\t(async () => {\n\t\t\t\tawait processModel();\n\t\t\t})()\r\n\t\t\taddDataPoint();\r\n\t\t\t// initialization for the next iteration\r\n\t\t\tBatch = null;\r\n\t\t\tdiffBatch = null;\r\n\t\t\tprevFrame = null;\r\n\t\t\tbatch_counter = 0;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tfunction startVideo() {\r\n\t\tif (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n\t\t\tnavigator.mediaDevices.getUserMedia({\r\n\t\t\t\tvideo: true\r\n\t\t\t}).then(function(stream) {\r\n\t\t\t\tvideo.srcObject = stream;\r\n\t\t\t\tvideo.addEventListener(\"loadedmetadata\", function() { // used to have an e here\r\n\t\t\t\t\tvideo.play();\r\n\t\t\t\t\t/* eslint-disable no-console */\r\n\t\t\t\t\tconsole.log(\"Webcam video successfully loaded\");\r\n\t\t\t\t\tloop();\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t// the chart\r\n\tfunction addDataPoint() {\r\n\t\tvar now = vis.moment();\n\t\t\n\t\tconsole.log(\"inside prediction\");\n\t\tconsole.log(prediction);\r\n\t\tdataset.add([{\r\n\t\t\tx: now,\r\n\t\t\ty: prediction,\r\n\t\t\tgroup: 0\r\n\t\t}])\r\n\r\n\t\tsetTimeout(moveWindow, delay);\r\n\t}\r\n\r\n\tfunction moveWindow() {\r\n\r\n\t\tlet strategy = 'static';\r\n\t\tvar range = graph2d.getWindow();\r\n\t\tnow = vis.moment();\r\n\r\n\t\tvar interval = range.end - range.start;\r\n\r\n\t\tif (now > range.end) {\r\n\t\t\tgraph2d.setWindow(now - 0.1 * interval, now + 0.9 * interval);\r\n\t\t}\r\n\r\n\t\tswitch (strategy) {\r\n\t\t\tdefault: // 'static'\r\n\t\t\t\t// move the window 90% to the left when now is larger than the end of the window\r\n\t\t\t\tif (range > 10) {\r\n\t\t\t\t\t//\t\tconsole.log(\"move window\");\r\n\t\t\t\t\tgraph2d.setWindow(now - 0.1 * interval, now + 0.9 * interval);\r\n\t\t\t\t}\r\n\t\t\t\tsetTimeout(moveWindow, delay);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n"]}]}