{"remainingRequest":"/Users/haojianie/Desktop/Web/rppg-master/node_modules/babel-loader/lib/index.js!/Users/haojianie/Desktop/Web/rppg-master/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/haojianie/Desktop/Web/rppg-master/src/components/sketch.js","dependencies":[{"path":"/Users/haojianie/Desktop/Web/rppg-master/src/components/sketch.js","mtime":1597707989812},{"path":"/Users/haojianie/Desktop/Web/rppg-master/node_modules/cache-loader/dist/cjs.js","mtime":1597616075057},{"path":"/Users/haojianie/Desktop/Web/rppg-master/node_modules/babel-loader/lib/index.js","mtime":1597616074968},{"path":"/Users/haojianie/Desktop/Web/rppg-master/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1597616074257}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/haojianie/Desktop/Web/rppg-master/src/components/sketch.js"],"names":["vis","tf","AttentionMask","TSM","run","video","document","getElementById","path","orig_v","Xsub","dXsub","prevFrame","diffBatch","Batch","delay","batch_size","batch_counter","dim","prediction","model","prediction_rppg","serialization","registerClass","loadModel","loadLayersModel","console","log","processModel","predict","arraySync","names","groups","DataSet","container","dataset","now","moment","options","drawPoints","dataAxis","visible","left","title","text","legend","start","add","end","graph2d","Graph2d","id","content","interpolation","parametrization","startVideo","loop_counter","loop","preprocess","setTimeout","browser","fromPixels","image","resizeBilinear","asType","div","scalar","expandDims","sub","moments","variance","sqrt","mean","cast","concat","print","addDataPoint","navigator","mediaDevices","getUserMedia","then","stream","srcObject","addEventListener","play","i","x","y","group","moveWindow","strategy","range","getWindow","interval","setWindow"],"mappings":";;AAAA,OAAO,KAAKA,GAAZ,MAAqB,yBAArB;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;AACA,SACCC,aADD,QAEO,oBAFP;AAGA,SACCC,GADD,QAEO,UAFP;AAIA,eAAe,SAASC,GAAT,GAAe;AAE7B,MAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AACA,MAAIC,IAAI,GAAG,cAAX;AACA,MAAIC,MAAJ,EAAYC,IAAZ,EAAkBC,KAAlB,EAAyBC,SAAzB;AACA,MAAIC,SAAJ,EAAeC,KAAf;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,aAAa,GAAG,CAApB;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,UAAJ;AACA,MAAIC,KAAJ;AACA,MAAIC,eAAJ,CAZ6B,CAc7B;;AACApB,EAAAA,EAAE,CAACqB,aAAH,CAAiBC,aAAjB,CAA+BpB,GAA/B;AACAF,EAAAA,EAAE,CAACqB,aAAH,CAAiBC,aAAjB,CAA+BrB,aAA/B,EAhB6B,CAkB7B;;AACAsB,EAAAA,SAAS;;AAnBoB,WAoBdA,SApBc;AAAA;AAAA;;AAAA;AAAA,yEAoB7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACevB,EAAE,CAACwB,eAAH,CAAmBjB,IAAnB,CADf;;AAAA;AACCY,cAAAA,KADD;;AAEC;AACAM,cAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;AAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KApB6B;AAAA;AAAA;;AAAA,WA0BdC,YA1Bc;AAAA;AAAA,IAuC7B;;;AAvC6B;AAAA,4EA0B7B;AAAA;AAAA;AAAA;AAAA;AACCT,cAAAA,UAAU,GAAGC,KAAK,CAACS,OAAN,CAAc,CAAChB,SAAD,EAAYC,KAAZ,CAAd,CAAb;AACAO,cAAAA,eAAe,GAAGF,UAAU,CAAC,CAAD,CAAV,CAAcW,SAAd,EAAlB,CAFD,CAGA;AACC;AACA;AAEA;AACA;;AACAJ,cAAAA,OAAO,CAACC,GAAR,CAAYR,UAAU,CAAC,CAAD,CAAtB;AACAO,cAAAA,OAAO,CAACC,GAAR,CAAYR,UAAU,CAAC,CAAD,CAAtB;;AAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA1B6B;AAAA;AAAA;;AAwC7B,MAAIY,KAAK,GAAG,CAAC,SAAD,CAAZ;AACA,MAAIC,MAAM,GAAG,IAAIhC,GAAG,CAACiC,OAAR,EAAb;AACA,MAAIC,SAAS,GAAG5B,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAhB;AACA,MAAI4B,OAAO,GAAG,IAAInC,GAAG,CAACiC,OAAR,EAAd;AACA,MAAIG,GAAG,GAAGpC,GAAG,CAACqC,MAAJ,EAAV;AAEA,MAAIC,OAAO,GAAG;AACbC,IAAAA,UAAU,EAAE,KADC;AAEbC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,OAAO,EAAE,IADA;AAETC,MAAAA,IAAI,EAAE;AACLC,QAAAA,KAAK,EAAE;AACNC,UAAAA,IAAI,EAAE;AADA;AADF;AAFG,KAFG;AAUbC,IAAAA,MAAM,EAAE,KAVK;AAWbC,IAAAA,KAAK,EAAE9C,GAAG,CAACqC,MAAJ,GAAaU,GAAb,CAAiB,CAAC,CAAlB,EAAqB,SAArB,CAXM;AAW2B;AACxCC,IAAAA,GAAG,EAAEhD,GAAG,CAACqC,MAAJ,GAAaU,GAAb,CAAiB,EAAjB,EAAqB,SAArB;AAZQ,GAAd,CA9C6B,CA8D7B;;AACA,MAAIE,OAAO,GAAG,IAAIjD,GAAG,CAACkD,OAAR,CAAgBhB,SAAhB,EAA2BC,OAA3B,EAAoCH,MAApC,EAA4CM,OAA5C,CAAd,CA/D6B,CAiE7B;;AACAN,EAAAA,MAAM,CAACe,GAAP,CAAW;AACVI,IAAAA,EAAE,EAAE,CADM;AAEVC,IAAAA,OAAO,EAAErB,KAAK,CAAC,CAAD,CAFJ;AAGVO,IAAAA,OAAO,EAAE;AACRC,MAAAA,UAAU,EAAE,KADJ;AAERc,MAAAA,aAAa,EAAE;AACdC,QAAAA,eAAe,EAAE;AADH;AAFP;AAHC,GAAX;AAYAC,EAAAA,UAAU;AAEV,MAAIC,YAAY,GAAG,CAAnB;;AAEA,WAASC,IAAT,GAAgB;AACf,QAAID,YAAY,GAAG,EAAnB,EAAuB;AACtBA,MAAAA,YAAY;AACZE,MAAAA,UAAU;AACVC,MAAAA,UAAU,CAACF,IAAD,EAAO1C,KAAP,CAAV;AACA;AAED,GAzF4B,CA4F7B;;;AACA,WAAS2C,UAAT,GAAsB;AAErB;AACAjD,IAAAA,MAAM,GAAGR,EAAE,CAAC2D,OAAH,CAAWC,UAAX,CAAsBxD,KAAtB,CAAT,CAHqB,CAKrB;;AACAK,IAAAA,IAAI,GAAGT,EAAE,CAAC6D,KAAH,CAASC,cAAT,CAAwBtD,MAAxB,EAAgC,CAACS,GAAD,EAAMA,GAAN,CAAhC,CAAP;AACAR,IAAAA,IAAI,GAAGA,IAAI,CAACsD,MAAL,CAAY,SAAZ,EAAuBC,GAAvB,CAA2BhE,EAAE,CAACiE,MAAH,CAAU,GAAV,CAA3B,CAAP;AACAxD,IAAAA,IAAI,GAAGA,IAAI,CAACyD,UAAL,CAAgB,CAAhB,CAAP,CARqB,CAQM;;AAE3B,QAAIvD,SAAS,IAAI,IAAjB,EAAuB;AACtBA,MAAAA,SAAS,GAAGF,IAAZ;AACA;;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,KALD,MAKO;AACN;AACA;AAEA;AACAhB,MAAAA,KAAK,GAAGV,EAAE,CAACgE,GAAH,CAAOhE,EAAE,CAACmE,GAAH,CAAO1D,IAAP,EAAaE,SAAb,CAAP,EAAgCX,EAAE,CAAC8C,GAAH,CAAOrC,IAAP,EAAaE,SAAb,CAAhC,CAAR,CALM,CAON;;AACAD,MAAAA,KAAK,GAAGV,EAAE,CAACgE,GAAH,CAAOtD,KAAP,EAAcV,EAAE,CAACoE,OAAH,CAAW1D,KAAX,EAAkB2D,QAAlB,CAA2BC,IAA3B,EAAd,CAAR,CARM,CAQoD;;AAC1D7D,MAAAA,IAAI,GAAGT,EAAE,CAACmE,GAAH,CAAO1D,IAAP,EAAaT,EAAE,CAACuE,IAAH,CAAQ9D,IAAR,CAAb,CAAP,CATM,CAS8B;;AACpCA,MAAAA,IAAI,GAAGT,EAAE,CAACgE,GAAH,CAAOvD,IAAP,EAAaT,EAAE,CAACoE,OAAH,CAAW3D,IAAX,EAAiB4D,QAAjB,CAA0BC,IAA1B,EAAb,CAAP,CAVM,CAUiD;;AACvD;;AACA7C,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAEAf,MAAAA,SAAS,GAAGF,IAAZ;;AACA,UAAIO,aAAa,IAAI,CAArB,EAAwB;AACvBH,QAAAA,KAAK,GAAGb,EAAE,CAACwE,IAAH,CAAQ/D,IAAR,EAAc,SAAd,CAAR;AACAG,QAAAA,SAAS,GAAGF,KAAZ;AACA,OAHD,MAGO;AACNG,QAAAA,KAAK,GAAGb,EAAE,CAACyE,MAAH,CAAU,CAAC5D,KAAD,EAAQJ,IAAR,CAAV,CAAR,CADM,CAC2B;;AACjCG,QAAAA,SAAS,GAAGZ,EAAE,CAACyE,MAAH,CAAU,CAAC7D,SAAD,EAAYF,KAAZ,CAAV,CAAZ;AACAG,QAAAA,KAAK,CAAC6D,KAAN,CAAY,IAAZ;AACA9D,QAAAA,SAAS,CAAC8D,KAAV,CAAgB,IAAhB;AACA;;AACD1D,MAAAA,aAAa;AACb;;AAED,QAAIA,aAAa,IAAID,UAArB,EAAiC;AAGhC,8DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACMY,YAAY,EADlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAGAgD,MAAAA,YAAY,GANoB,CAOhC;;AACA9D,MAAAA,KAAK,GAAG,IAAR;AACAD,MAAAA,SAAS,GAAG,IAAZ;AACAD,MAAAA,SAAS,GAAG,IAAZ;AACAK,MAAAA,aAAa,GAAG,CAAhB;AAEA;AACD;;AAED,WAASsC,UAAT,GAAsB;AACrB,QAAIsB,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACC,YAAV,CAAuBC,YAArD,EAAmE;AAClEF,MAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AACnC1E,QAAAA,KAAK,EAAE;AAD4B,OAApC,EAEG2E,IAFH,CAEQ,UAASC,MAAT,EAAiB;AACxB5E,QAAAA,KAAK,CAAC6E,SAAN,GAAkBD,MAAlB;AACA5E,QAAAA,KAAK,CAAC8E,gBAAN,CAAuB,gBAAvB,EAAyC,YAAW;AAAE;AACrD9E,UAAAA,KAAK,CAAC+E,IAAN;AACA;;AACA1D,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACA8B,UAAAA,IAAI;AACJ,SALD;AAMA,OAVD;AAWA;AACD,GArK4B,CAuK7B;;;AACA,WAASmB,YAAT,GAAwB;AACvBlD,IAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACA,QAAIkE,CAAC,GAAG,CAAR;AACA3D,IAAAA,OAAO,CAACC,GAAR,CAAYN,eAAe,CAACgE,CAAD,CAA3B;;AACA,WAAOA,CAAC,GAAG,EAAX,EAAe;AACdlD,MAAAA,OAAO,CAACY,GAAR,CAAY,CAAC;AACZuC,QAAAA,CAAC,EAAEtF,GAAG,CAACqC,MAAJ,EADS;AAEZkD,QAAAA,CAAC,EAAElE,eAAe,CAACgE,CAAD,CAFN;AAGZG,QAAAA,KAAK,EAAE;AAHK,OAAD,CAAZ;AAKAH,MAAAA,CAAC;AACD;;AACD1B,IAAAA,UAAU,CAAC8B,UAAD,EAAa1E,KAAb,CAAV;AACA;;AAED,WAAS0E,UAAT,GAAsB;AAErB,QAAIC,QAAQ,GAAG,QAAf;AACA,QAAIC,KAAK,GAAG1C,OAAO,CAAC2C,SAAR,EAAZ;AACAxD,IAAAA,GAAG,GAAGpC,GAAG,CAACqC,MAAJ,EAAN;AAEA,QAAIwD,QAAQ,GAAGF,KAAK,CAAC3C,GAAN,GAAY2C,KAAK,CAAC7C,KAAjC;;AAEA,QAAIV,GAAG,GAAGuD,KAAK,CAAC3C,GAAhB,EAAqB;AACpBC,MAAAA,OAAO,CAAC6C,SAAR,CAAkB1D,GAAG,GAAG,MAAMyD,QAA9B,EAAwCzD,GAAG,GAAG,MAAMyD,QAApD;AACA;;AAED,YAAQH,QAAR;AACC;AAAS;AACR;AACA,YAAIC,KAAK,GAAG,EAAZ,EAAgB;AACf;AACA1C,UAAAA,OAAO,CAAC6C,SAAR,CAAkB1D,GAAG,GAAG,MAAMyD,QAA9B,EAAwCzD,GAAG,GAAG,MAAMyD,QAApD;AACA;;AACDlC,QAAAA,UAAU,CAAC8B,UAAD,EAAa1E,KAAb,CAAV;AACA;AARF;AAUA;AACD","sourcesContent":["import * as vis from 'vis-timeline/standalone';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport {\r\n\tAttentionMask\r\n} from './AttentionMask.js';\r\nimport {\r\n\tTSM\r\n} from './TSM.js';\r\n\r\nexport default function run() {\r\n\r\n\tlet video = document.getElementById('video');\r\n\tvar path = \"./model.json\";\r\n\tvar orig_v, Xsub, dXsub, prevFrame;\r\n\tvar diffBatch, Batch;\r\n\tvar delay = 30;\r\n\tvar batch_size = 20;\r\n\tvar batch_counter = 0;\r\n\tvar dim = 36;\r\n\tvar prediction;\r\n\tlet model;\r\n\tlet prediction_rppg;\r\n\r\n\t// Register Cusomized Layers\r\n\ttf.serialization.registerClass(TSM);\r\n\ttf.serialization.registerClass(AttentionMask);\r\n\r\n\t// Load ML Model\r\n\tloadModel();\r\n\tasync function loadModel() {\r\n\t\tmodel = await tf.loadLayersModel(path);\r\n\t\t/* eslint-disable no-console */\r\n\t\tconsole.log(\"Successfully loaded ml model\");\r\n\t}\r\n\r\n\tasync function processModel() {\r\n\t\tprediction = model.predict([diffBatch, Batch]);\r\n\t\tprediction_rppg = prediction[0].arraySync();\r\n\t//\tvar prediction_pulse = prediction[1].arraySync();\r\n\t\t//rppg = Array.from(rppg);\r\n\t\t//pulse = Array.from(pulse);\r\n\r\n\t\t//\tprediction[0].print(1);\r\n\t\t//\tprediction[0].print(2);\r\n\t\tconsole.log(prediction[0]);\r\n\t\tconsole.log(prediction[1]);\r\n\t}\r\n\r\n\t// Definition for the line chart \r\n\tvar names = [\"uniform\"];\r\n\tvar groups = new vis.DataSet();\r\n\tvar container = document.getElementById(\"visualization\");\r\n\tvar dataset = new vis.DataSet();\r\n\tvar now = vis.moment();\r\n\r\n\tvar options = {\r\n\t\tdrawPoints: false,\r\n\t\tdataAxis: {\r\n\t\t\tvisible: true,\r\n\t\t\tleft: {\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: \"Normalized Amplitude\",\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tlegend: false,\r\n\t\tstart: vis.moment().add(-5, \"seconds\"), // display start,  end\r\n\t\tend: vis.moment().add(10, \"seconds\"),\r\n\r\n\t};\r\n\r\n\t// eslint-disable-next-line\r\n\tvar graph2d = new vis.Graph2d(container, dataset, groups, options);\r\n\r\n\t// Note: could delete the group , just use dataset\r\n\tgroups.add({\r\n\t\tid: 0,\r\n\t\tcontent: names[0],\r\n\t\toptions: {\r\n\t\t\tdrawPoints: false,\r\n\t\t\tinterpolation: {\r\n\t\t\t\tparametrization: \"uniform\",\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\r\n\r\n\tstartVideo();\r\n\r\n\tvar loop_counter = 0;\r\n\r\n\tfunction loop() {\r\n\t\tif (loop_counter < 22) {\r\n\t\t\tloop_counter++;\r\n\t\t\tpreprocess();\r\n\t\t\tsetTimeout(loop, delay);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Video data Preprocess\r\n\tfunction preprocess() {\r\n\r\n\t\t// Get the data of original video file\r\n\t\torig_v = tf.browser.fromPixels(video);\r\n\r\n\t\t// Resize to [1, 36, 36, 3], type float \r\n\t\tXsub = tf.image.resizeBilinear(orig_v, [dim, dim]);\r\n\t\tXsub = Xsub.asType('float32').div(tf.scalar(255));\r\n\t\tXsub = Xsub.expandDims(0); // (1, 36, 36, 3)\r\n\r\n\t\tif (prevFrame == null) {\r\n\t\t\tprevFrame = Xsub;\r\n\t\t\t/* eslint-disable no-console */\r\n\t\t\tconsole.log(\"initialize\");\r\n\r\n\t\t} else {\r\n\t\t\t//--------------------------------------\r\n\t\t\t// didn't get  only the 300, 300 , ie didn't crop\t\t\r\n\r\n\t\t\t// FRAME DIFF:\r\n\t\t\tdXsub = tf.div(tf.sub(Xsub, prevFrame), tf.add(Xsub, prevFrame));\r\n\r\n\t\t\t// SUBTRACT MEAN OF IMG:\r\n\t\t\tdXsub = tf.div(dXsub, tf.moments(dXsub).variance.sqrt()); // dxsub / np.std(dxsub,ddof=1)\r\n\t\t\tXsub = tf.sub(Xsub, tf.mean(Xsub)); // Xsub = Xsub - Xsub.mean(axis = 0)\r\n\t\t\tXsub = tf.div(Xsub, tf.moments(Xsub).variance.sqrt()); // Xsub = Xsub - Xsub.mean(axis = 0)\r\n\t\t\t/* eslint-disable no-console */\r\n\t\t\tconsole.log(\"below is X before mean\");\r\n\r\n\t\t\tprevFrame = Xsub;\r\n\t\t\tif (batch_counter == 0) {\r\n\t\t\t\tBatch = tf.cast(Xsub, 'float32');\r\n\t\t\t\tdiffBatch = dXsub;\r\n\t\t\t} else {\r\n\t\t\t\tBatch = tf.concat([Batch, Xsub]) // note the xsub here is after \r\n\t\t\t\tdiffBatch = tf.concat([diffBatch, dXsub]);\r\n\t\t\t\tBatch.print(true);\r\n\t\t\t\tdiffBatch.print(true);\r\n\t\t\t}\r\n\t\t\tbatch_counter++;\r\n\t\t}\r\n\r\n\t\tif (batch_counter == batch_size) {\r\n\r\n\r\n\t\t\t(async () => {\r\n\t\t\t\tawait processModel();\r\n\t\t\t})()\r\n\t\t\taddDataPoint();\r\n\t\t\t// initialization for the next iteration\r\n\t\t\tBatch = null;\r\n\t\t\tdiffBatch = null;\r\n\t\t\tprevFrame = null;\r\n\t\t\tbatch_counter = 0;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tfunction startVideo() {\r\n\t\tif (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n\t\t\tnavigator.mediaDevices.getUserMedia({\r\n\t\t\t\tvideo: true\r\n\t\t\t}).then(function(stream) {\r\n\t\t\t\tvideo.srcObject = stream;\r\n\t\t\t\tvideo.addEventListener(\"loadedmetadata\", function() { // used to have an e here\r\n\t\t\t\t\tvideo.play();\r\n\t\t\t\t\t/* eslint-disable no-console */\r\n\t\t\t\t\tconsole.log(\"Webcam video successfully loaded\");\r\n\t\t\t\t\tloop();\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t// the chart\r\n\tfunction addDataPoint() {\t\r\n\t\tconsole.log(prediction);\r\n\t\tvar i = 0;\n\t\tconsole.log(prediction_rppg[i])\r\n\t\twhile (i < 20) {\r\n\t\t\tdataset.add([{\r\n\t\t\t\tx: vis.moment(),\r\n\t\t\t\ty: prediction_rppg[i],\r\n\t\t\t\tgroup: 0\r\n\t\t\t}])\n\t\t\ti ++;\r\n\t\t}\r\n\t\tsetTimeout(moveWindow, delay);\r\n\t}\r\n\r\n\tfunction moveWindow() {\r\n\r\n\t\tlet strategy = 'static';\r\n\t\tvar range = graph2d.getWindow();\r\n\t\tnow = vis.moment();\r\n\r\n\t\tvar interval = range.end - range.start;\r\n\r\n\t\tif (now > range.end) {\r\n\t\t\tgraph2d.setWindow(now - 0.1 * interval, now + 0.9 * interval);\r\n\t\t}\r\n\r\n\t\tswitch (strategy) {\r\n\t\t\tdefault: // 'static'\r\n\t\t\t\t// move the window 90% to the left when now is larger than the end of the window\r\n\t\t\t\tif (range > 10) {\r\n\t\t\t\t\t//\t\tconsole.log(\"move window\");\r\n\t\t\t\t\tgraph2d.setWindow(now - 0.1 * interval, now + 0.9 * interval);\r\n\t\t\t\t}\r\n\t\t\t\tsetTimeout(moveWindow, delay);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\n"]}]}